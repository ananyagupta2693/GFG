
The idea is to traverse array from right to left. Find the maximum and update it as you traverse. If an element is supposed to be a leader, it has to be greater than the maximum value that is to its right.
Once done, reverse the array/vector in case order matters. 

class Solution{
    //Function to find the leaders in the array.
    public:
    vector<int> leaders(int a[], int n){
      
        vector<int> result;
        result.push_back(a[n-1]);
        int max=a[n-1];
        
        for(int i=n-2;i>=0;i--){
            if(a[i]>=max){
                
                result.push_back(a[i]);
                max=a[i];
                
            }
           
        }
        reverse(result.begin(),result.end());
        
        return result;
        
    }
};
